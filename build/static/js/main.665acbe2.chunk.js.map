{"version":3,"sources":["components/LoginForm.jsx","components/MessageForm.jsx","components/MyMessage.jsx","components/TheirMessage.jsx","components/ChatFeed.jsx","App.js","index.js"],"names":["LoginForm","useState","username","setUsername","password","setPassword","error","setError","handleSubmit","e","a","preventDefault","authObject","axios","get","headers","localStorage","setItem","window","location","reload","className","onSubmit","type","value","onChange","target","placeholder","required","align","MessageForm","props","setValue","chatId","creds","event","text","trim","length","sendMessage","isTyping","htmlFor","PictureOutlined","multiple","id","style","display","files","SendOutlined","MyMessage","message","attachments","src","file","alt","float","marginRight","color","backgroundColor","TheirMessage","lastmessage","isFirstMessageByUser","sender","backgroundImage","avatar","marginLeft","ChatFeed","chats","activeChat","userName","messages","chat","renderReadReceipts","isMyMessage","people","map","person","index","last_read","title","keys","Object","key","lastMessageKey","width","lastMessage","renderMessages","height","App","getItem","projectID","userSecret","renderChatFeed","chatAppProps","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.665acbe2.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport axios from 'axios'\r\n\r\nconst LoginForm = () => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        \r\n        const authObject = { 'Project-ID' : \"86d91fc1-bf87-48b1-9a51-92ba9b432b39\", 'User-Name' : username, 'User-Secret' : password}\r\n    \r\n        try{\r\n            await axios.get('https://api.chatengine.io/chats', { headers : authObject});\r\n            \r\n            localStorage.setItem('username', username);\r\n            localStorage.setItem('password', password);\r\n\r\n            window.location.reload();\r\n\r\n        } catch(error) {\r\n            setError('Oops, incorrect credentials.')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div className=\"form\">\r\n                <h1 className=\"title\">Chat Application</h1>\r\n                <form onSubmit={handleSubmit}>\r\n                    <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} className=\"input\" placeholder=\"Username\" required />\r\n                    <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} className=\"input\" placeholder=\"Password\" required />\r\n                    <div align=\"center\">\r\n                        <button type=\"submit\" className=\"button\">\r\n                            <span>Start Chatting</span>\r\n                        </button>\r\n                    </div>\r\n                    <h2 className=\"error\">{error}</h2>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginForm;","import { useState } from \"react\";\r\nimport { sendMessage, isTyping } from 'react-chat-engine'\r\nimport { SendOutlined, PictureOutlined } from \"@ant-design/icons\";\r\n\r\nconst MessageForm = (props) => {\r\n    const [value, setValue] = useState('');\r\n    const { chatId, creds } = props;\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const text = value.trim();\r\n\r\n        if(text.length > 0) sendMessage(creds, chatId, {text});\r\n\r\n        setValue('');\r\n    }\r\n    \r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n        isTyping(props, chatId);\r\n    }\r\n\r\n    const handleUpload = (event) => {\r\n        sendMessage(creds, chatId, {files : event.target.files, text : ''})\r\n    }\r\n    return (\r\n        <form className=\"message-form\" onSubmit={handleSubmit}>\r\n            <input\r\n                className=\"message-input\"\r\n                placeholder=\"Send a message ...\"\r\n                value={value}\r\n                onChange={handleChange}\r\n                onSubmit={handleSubmit}\r\n            />\r\n            <label htmlFor=\"upload-button\">\r\n                <span className=\"image-button\">\r\n                    <PictureOutlined className=\"picture-icon\" />\r\n                </span>\r\n            </label>\r\n            <input\r\n                type=\"file\"\r\n                multiple={false}\r\n                id=\"upload-button\"\r\n                style={{display : 'none'}}\r\n                onChange={handleUpload}\r\n            />\r\n            <button type=\"submit\" className=\"send-button\">\r\n                <SendOutlined className=\"send-icon\" />\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default MessageForm;","const MyMessage = ({message}) => {\r\n    if(message?.attachments?.length > 0){\r\n        return (\r\n            <img\r\n                src={message.attachments[0].file}\r\n                alt=\"message-attachment\"\r\n                className=\"message-image\"\r\n                style={{float : 'right'}}\r\n            />\r\n        )\r\n    }\r\n    \r\n    return (\r\n        <div className=\"message\" style={{float : 'right', marginRight : '18px', color : 'white', backgroundColor: '#3B2A50'}}>\r\n            {message.text}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyMessage;"," const TheirMessage = ({lastmessage, message}) => {\r\n    const isFirstMessageByUser = !lastmessage || lastmessage.sender.username !== message.sender.username;\r\n    return (\r\n        <div className=\"message-row\">\r\n            {isFirstMessageByUser && (\r\n                <div\r\n                    className=\"message-avatar\"\r\n                    style={{backgroundImage : `url(${message?.sender?.avatar})`}}\r\n                />\r\n            )}\r\n            {\r\n                message?.attachments?.length > 0\r\n                    ? (\r\n                        <img\r\n                            src={message.attachments[0].file}\r\n                            alt=\"message-attachment\"\r\n                            className=\"message-image\"\r\n                            style={{marginLeft : isFirstMessageByUser ? '4px' : '48px'}}\r\n                        />\r\n                    ) :\r\n                    (\r\n                        <div className=\"message\" style={{float : 'left', backgroundColor: '#CABCDC', marginLeft : isFirstMessageByUser ? '4px' : '48px'}}>\r\n                            {message.text}\r\n                        </div>\r\n                    )\r\n                }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TheirMessage;","import MessageForm from \"./MessageForm\";\r\nimport MyMessage from \"./MyMessage\";\r\nimport TheirMessage from \"./TheirMessage\";\r\n\r\nconst ChatFeed = (props) => {\r\n    const {chats, activeChat, userName, messages} = props;\r\n\r\n    const chat = chats && chats[activeChat];\r\n    \r\n    const renderReadReceipts = (message, isMyMessage) => {\r\n        return chat.people.map((person, index) => person.last_read === message.id && (\r\n            <div \r\n                key={`read_${index}`}\r\n                className=\"read-receipt\"\r\n                style={{\r\n                    float : isMyMessage ? 'right' : 'left',\r\n                    backgroundImage : `url(${person?.person?.avatar})` \r\n                }}\r\n            />\r\n        ))\r\n    }\r\n\r\n    const renderMessages = () => {\r\n        const keys = Object.keys(messages);\r\n        \r\n        return keys.map((key, index) => {\r\n            const message = messages[key];\r\n            const lastMessageKey = index === 0 ? null : keys[index-1];\r\n            const isMyMessage = userName === message.sender.username;\r\n        \r\n            return (\r\n                <div key={`msg_${index}`} style={{width : '100%'}}>\r\n                    <div className=\"message-block\">\r\n                        {\r\n                            isMyMessage\r\n                            ? <MyMessage message={message}/>\r\n                            : <TheirMessage message={message} lastMessage={messages[lastMessageKey]} />\r\n                        }\r\n                    </div>\r\n                    <div className=\"read-receipts\" style={{marginRight : isMyMessage ? '18px' : '0px', marginLeft : isMyMessage ? '0px' : '68px'}}>\r\n                        {renderReadReceipts(message, isMyMessage)}\r\n                    </div>\r\n                </div>\r\n            );\r\n        })\r\n    }\r\n\r\n    if(!chat) return 'Loading ...';\r\n\r\n    return (\r\n        <div className=\"chat-feed\">\r\n            <div className=\"chat-title-container\"> \r\n                <div className=\"chat-title\">{chat.title} </div>\r\n                <div className=\"chat-subtitle\"> \r\n                    |\r\n                    {chat.people.map((person) => ` ${person.person.username} |`)}\r\n                </div>\r\n            </div>\r\n            {renderMessages()}\r\n            <div style={{height : '100px'}} />\r\n            <div className=\"message-form-container\">\r\n                <MessageForm {... props} chatId={activeChat}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatFeed;","import{ ChatEngine } from 'react-chat-engine';\r\n\r\nimport LoginForm from './components/LoginForm';\r\nimport ChatFeed from './components/ChatFeed';\r\n\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n    if(!localStorage.getItem('username')) return <LoginForm />\r\n    \r\n    return(\r\n        <ChatEngine\r\n            height = \"100vh\"\r\n            projectID = \"86d91fc1-bf87-48b1-9a51-92ba9b432b39\"\r\n            userName = {localStorage.getItem('username')}\r\n            userSecret = {localStorage.getItem('password')}\r\n            renderChatFeed = {(chatAppProps) => <ChatFeed {...chatAppProps}/>}\r\n        />\r\n    )\r\n}\r\n\r\nexport default App;","import react from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}